==========================================================================================================

You are being asked to simulate a UUID generator by creating sequences of numbers, written out as strings. 
If the resulting string is under 30 characters long, it should padded, if it’s over 40 characters long
then it should be truncated.

	Please create a REST API with SpringBoot endpoint that implements a function that generates these simulated 
	sequences. Possible parameters of x,y,z may be set with request.

	Use this the rule for generating number sequences:

	1.      start with a randomly generated (real) number
            
            
	2.  	If the number is even, then divide by x=2
            
            
	3.      If the number is odd then add y=7
            
            
	4.      Check for longest palindromic sub-sequence
            
            
	5.      At least z=5 that #2 & #3 should run to generate sequence
            
            
	6.      At least half of numbers should be generated by lines # 2 and #3
	        
	Think about testing and validation. Clearly state assumptions. Document your thinking.

	Please post your code to a public repo (github, bitbucket,) and send the link to koncertmsp@koncertit.com.

==========================================================================================================	
	
	Above are rules to generate UUID.  I have difficulty to understand them fully.  Below are some of
	my thoughts.
	
Rule 1:	? real number? 4.123 is a real number, not an integer, no concept of even or odd.  So it must create an integer
	
Rule 2:	? x=2 is an example or any x input from parameter or default value if x is missing from request body?
	
Rule 3:	? guess y = 7 is as an example like rule 2.  
	
Rule 4:	? is 'check' a rule? It does not generate any number, how it can contribute to sequences?
	
Rule 5:	? #2 or #3 always run as an integer is either even or odd, not relation to z, why 5 as a rule???
	
Rule 6:	? which will generate numbers except #2 and #3?


So I created two versions of logic to uuid:

V1: loop for max 40 times and each random generates an integer < 10, so based on #2 or #3, create sequences

V2: try to use most rules possible.  
    (1) First generate a big enough integer A(no reason,just don't want to padding a lot at end), based on it 
    (2) If A is even, use #2 to get another integer B = A/x
    (3) If A is odd, use #3 to get B = A + y;
    (4) Find palindromic sub-sequence C from B
    (5) If z >= 5, do #2 or #3 on C to get D
    (6) Append A + B + C + D = E
    (7) If E length < 30 padding random integers or If E length > 40, truncate to 40 chars
    
    
Rest API is a post method to accept application/json.  Parameters in json format in requestbody 
and it is optional,
{
   "x" : "2",
   "y" : "7",
   "z" : "4"
}

I assume some default value for x, y, z if requestbody is missing.

Test api by using SoupUI and set header's Content-Type to application/json.
uri is /api/uuid/v1 or /api/uuid/v2 based on above two implementations of logic.